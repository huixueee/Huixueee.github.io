<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HEXO操作指南（三）</title>
      <link href="/2019/11/17/%E4%BD%BFhexo%E6%8E%A5%E5%85%A5google/"/>
      <url>/2019/11/17/%E4%BD%BFhexo%E6%8E%A5%E5%85%A5google/</url>
      
        <content type="html"><![CDATA[<p>如果你不主动提交你的博客地址给各大搜索引擎，那么即使你站内优化做得再好，搜索引擎根本都不知道你的博客的存在。 为了让Google收录我的博客，就得向<a href="https://www.google.com/webmasters" target="_blank" rel="noopener">Google站长工具</a>提交我们得Sitemap。</p><h2 id="Google验证"><a href="#Google验证" class="headerlink" title="Google验证"></a>Google验证</h2><p>Google有多种验证方法，这里我选用Html标记，在<code>layout/_partial/head.pug</code>文件内输入<code>&lt;meta name=&quot;google-site-verification&quot; content=&quot;xxxxxxxxxxxxxxxxxx&quot; /&gt;</code>。<br>接着<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo c</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p>上传完毕点击验证便可验证成功。</p><h2 id="Sitemap调用"><a href="#Sitemap调用" class="headerlink" title="Sitemap调用"></a>Sitemap调用</h2><p>首先安装sitemap插件：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure></p><p>接着在<code>_config.yml</code>文件后添加：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Plugins:</span><br><span class="line">  - hexo-generator-sitemap</span><br><span class="line"></span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br></pre></td></tr></table></figure></p><p><strong>重点</strong>，把<code>_config.yml</code>中的<code>url</code>改成自己的域名，否者最终提交后会出现<strong>站点地图可读取，但存在错误</strong>。这样的字眼。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url: https://huixueee.com</span><br></pre></td></tr></table></figure></p><p>这时<code>public</code>文件夹内会出现相应的sitemap文件，随后：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo c</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p>在Google search console中选择站点地图-&gt;添加/测试站点地图，提交后便大功告成。</p>]]></content>
      
      
      <categories>
          
          <category> Technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些好玩的3d科研图</title>
      <link href="/2019/11/16/c4d-rhino/"/>
      <url>/2019/11/16/c4d-rhino/</url>
      
        <content type="html"><![CDATA[<h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><h3 id="Catenary"><a href="#Catenary" class="headerlink" title="Catenary"></a>Catenary</h3><p>弯曲线条制作</p><center><img src="https://s2.ax1x.com/2019/11/16/MBuIbT.png" alt> </center><p><a href="https://pan.baidu.com/s/1BcRBbGOczZSoDTxqb_TX9g" target="_blank" rel="noopener">点我下载源文件</a> 。</p><h3 id="Clew"><a href="#Clew" class="headerlink" title="Clew"></a>Clew</h3><p>线团制作</p><center><img src="https://s2.ax1x.com/2019/11/16/MBuH54.png" alt> </center><p><a href="https://pan.baidu.com/s/1fhvbkq3_2XE02djqhm408g" target="_blank" rel="noopener">点我下载源文件</a> 。</p><h3 id="Metaball"><a href="#Metaball" class="headerlink" title="Metaball"></a>Metaball</h3><p>融合球体制作</p><center><img src="https://s2.ax1x.com/2019/11/16/MBuTVU.png" alt> </center><p><a href="https://pan.baidu.com/s/1zwlwnivMs2Aa4hC02vnLuA" target="_blank" rel="noopener">点我下载源文件</a> ，源文件太大，换成GH电池图更方便。</p><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>最终3D文件导入C4D中，使用OC渲染(VRAY for Rhino真的太蛋疼了)。软件材质贴图以及渲染器插件在<a href="http://www.gfxcamp.com/category/software/" target="_blank" rel="noopener">gfxcamp</a>都能找到。未来会带来更多的3D科研制图。</p>]]></content>
      
      
      <categories>
          
          <category> 3D制图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Rhino </tag>
            
            <tag> C4D </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次长江存储面试</title>
      <link href="/2019/09/17/%E9%95%BF%E6%B1%9F%E5%AD%98%E5%82%A8%E9%9D%A2%E8%AF%95/"/>
      <url>/2019/09/17/%E9%95%BF%E6%B1%9F%E5%AD%98%E5%82%A8%E9%9D%A2%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>等候厅是一群想成角的小豆子，面试厅是一群严肃的“关老爷子”。</p><blockquote><p>他们是怎么成角的啊？那得挨多少打啊？我什么时候才能成为角啊？</p></blockquote><p>可曾想到小癞子说完这句话，回到戏班子就上吊自杀了呢？对他而言<strong>成角儿，难么？</strong>。我脑中浮现他说的“吃了糖葫芦，我就是他妈角儿了。”他是幸福的，他吃了他最爱的冰糖葫芦儿，看到了角儿精彩的人生，怀着吃了冰糖葫芦儿就能成角的梦想，他选择不去经历更多的苦难和辛酸，一了百了。没有人能评判他的选择是否正确。快乐与否，只有他一人能够评说。</p><p>电影中再次出现“冰糖葫芦儿”的叫卖声时，小癞子已经死了。小癞子是爱戏的，他为霸王激动、叫好；小石头和小豆子都是当他是朋友的，他们祭奠他，为他铺了床被子还盖上了代表勇武忠义的红脸脸谱。这声“冰糖葫芦儿”的叫卖声听得我心酸，他再也不用因为馋冰糖葫芦儿而发愁了，再也不用受苦挨骂了，他放弃了成角儿的希望。他一定觉得生的很痛苦，没有希望了，他只想吃了冰糖葫芦儿永远甜蜜的睡去了。小癞子就这么死了，他说“师傅打我就跟挠痒痒似的”是自我安慰还是吹牛都没有人在意了，他吊死在练功的地方，板子也塌了，荡起一片灰尘，他也就这样，再无一丝声息。</p><p>最后一次听见冰糖葫芦儿的叫卖声，是程蝶衣成角儿以后登台前，他向远方望了望，他想起了那年他们共同追的角儿，而小癞子却永远的去了，没能赶上今天的人前显贵。小癞子是小豆子的另一种人生选择，在人生的岔路口上，小豆子选择了在人后继续受罪，而小癞子选择了结束自己的生命。<strong>人啊，就得自个儿成全自个儿</strong>，他们都成全了自己，用不同的方式。</p><p>想起和面试官交谈，很感谢他在短短的十几分钟内将社会这本无字之书的内容传授与我。我的表现也算自个儿成全自个儿。</p><p>毕淑敏的作品里说过，我不相信手掌的纹路，但我相信手掌加上手指的力量。如果你不能确定你往哪里走，那么此处就是你的葬身之地。<br>那我往哪走呢？</p><p><font size="5"><strong>趁年轻，多做事</strong></font><br><br><br><br><br><br><br><br><br><br><br><br></p><p>后记：很开心拿到了二面通知，无论最后能不能成“角儿”，尽人事。</p>]]></content>
      
      
      <categories>
          
          <category> Emotion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SEM的基本原理（Part 2）</title>
      <link href="/2019/03/15/SEM%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%EF%BC%88Part%202%EF%BC%89/"/>
      <url>/2019/03/15/SEM%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%EF%BC%88Part%202%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="FIB-basics"><a href="#FIB-basics" class="headerlink" title="FIB basics"></a>FIB basics</h1><p>聚焦离子束(Focused Ion beam, FIB)是一种利用电透镜将离子束聚焦成非常小尺寸的显微切割仪器。</p><h2 id="electron-source"><a href="#electron-source" class="headerlink" title="electron source"></a>electron source</h2><p>区别于SEM中的电子发射枪，FIB使用的发射枪为液态金属镓。而且使用<strong>静电透镜</strong>(electrostatic lens)进行聚焦离子.</p><blockquote><ul><li>为什么使用静电透镜？<br>电子在静电透镜中相互作用小；电磁透镜的聚焦力直接与荷质比相关，不可能制造电磁透镜（这需要几公里的线圈）用于聚焦离子。因此聚焦和离子束的各种操作都是采用静电透镜。而不是用于电子的磁透镜。</li></ul></blockquote><center><img src="https://s2.ax1x.com/2019/09/12/nDrsp9.png" alt> </center><h2 id="the-function-of-I-beam"><a href="#the-function-of-I-beam" class="headerlink" title="the function of I-beam"></a>the function of I-beam</h2><center><img src="https://s2.ax1x.com/2019/09/12/nDrylR.gif" alt> </center><h2 id="the-function-of-E-beam"><a href="#the-function-of-E-beam" class="headerlink" title="the function of E-beam"></a>the function of E-beam</h2><center><img src="https://s2.ax1x.com/2019/09/12/nDr2m6.gif" alt> </center><h2 id="final-image"><a href="#final-image" class="headerlink" title="final image"></a>final image</h2><center><img src="https://s2.ax1x.com/2019/09/12/nDr661.gif" alt> </center><h1 id="EELS-basics"><a href="#EELS-basics" class="headerlink" title="EELS basics"></a>EELS basics</h1><p>电子能量损失谱（Electron energy loss spectroscopy，EELS）。在入射电子束与样品的相互作用过程中，一部分入射电子只发生弹性散射并没有能量损失，另一部分电子透过样品时则会与样品中的原子发生非弹性碰撞而损失能量，且有能量损失的这部分电子主要为向前散射(&lt;10 mrad)，所以利用环形探测器收集弹性散射电子成像的同时，通过下图所示方法收集并显示穿过环形探测器内孔的非弹性散射电子就可得到样品的化学成分及微结构信息。</p><p>具体来说，具有不同能量的电子在磁棱镜(实际上就是一个扇形铁磁体)内受磁场的作用沿着半径为R的圆弧形轨迹前进，从而在磁场的作用下发生至少90°的方向偏转。相同能量的电子偏转相同的角度，且能量损失越多的电子发生的偏转角度越大。</p><p>接着将具有相同能量损失但传播方向不一致的电子重新聚焦在像平面上一点。如此我们便得到了以电子能量损失为横坐标以电子强度分布为纵坐标的电子能量损失谱(EELS)。该过程中磁棱镜原理和三棱镜对自然光的散射相似，这也就是为什么将其称为磁棱镜的原因。</p><center><img src="https://s2.ax1x.com/2019/09/13/nrLQ3j.png" alt> </center><h2 id="why-use-EELS"><a href="#why-use-EELS" class="headerlink" title="why use EELS"></a>why use EELS</h2><p>我们知道EDS已经可以识别和定量分析元素周期表中碳元素以上的所有元素，并且对于某些材料而言可以达到原子级别的空间分辨率。那么我们为什么还要用EELS 这种手段去对材料进行表征呢？</p><p>理由是EELS 可以探测元素周期表中的所有元素，尤其擅长于轻元素的探测，并且可以分析出大量原子分辨率的化学和电子结构信息，从而了解材料的成键、价态、原子结构、成分、介电性能、能带宽度以及样品厚度等信息。</p><blockquote><ul><li>与传统的能量色散X射线光谱仪(EDX)相比，电子能量损失谱(EELS)的分辨率更高，因此电子能量损失谱(EELS)能适合能量有细微差别的元素分析；<ul><li>电子能量损失谱(EELS)可以分析轻元素，也别适合N、O、B等元素的分析，而能量色散X射线光谱仪(EDX)比较适合重元素的分析；</li><li>电子能量损失谱(EELS)可用于元素价态的分析；</li><li>电子能量损失谱(EELS)可判断晶型；</li><li>电子能量损失谱(EELS)可以很方便的测出薄膜厚度。</li></ul></li></ul></blockquote><h2 id="analyze-the-EELS-graph"><a href="#analyze-the-EELS-graph" class="headerlink" title="analyze the EELS graph"></a>analyze the EELS graph</h2><center><img src="https://s2.ax1x.com/2019/09/13/nrLlgs.png" alt> </center><h3 id="zero-loss-peak"><a href="#zero-loss-peak" class="headerlink" title="zero loss peak"></a>zero loss peak</h3><p>零损失峰(zero loss peak， ZLP)主要由能量保持为入射电子能量E0的电子贡献。这类电子主要是透过样品后保持向前散射的电子。所以当样品很薄时，得到的能损谱应该主要显示ZLP 特征。严格意义上讲，零损失峰这个定义并不确切。</p><p>一方面，到目前为止商业电子枪发射的电子都具有一定能量色散(约为几十到数百meV)，还不能制造只发射单一波长电子的电子枪。另一方面，由于入射电子和声子的相互作用过程中损失的能量一般小于谱仪的能量分辨率，所以ZLP中包含有这部分能量损失小于能损谱仪分辨率极限的电子。</p><p>一般来说，能损谱中的ZLP是强度最强的峰，也就是说，在对薄样品的透射电镜观察中，绝大多数电子可以透过样品而不经过与样品中原子的相互作用。</p><h3 id="low-energy-region"><a href="#low-energy-region" class="headerlink" title="low energy region"></a>low energy region</h3><p>在低能损失谱范围内，最显著的特征就是等离子峰，它主要对应于价电子(金属中的导电电子)的集体振荡，这种振荡行为类似于往湖中扔一块石头后荡起的涟漪，只不过等离子振荡会由于晶格的阻尼和电子跃迁而迅速衰减。等离子峰对应的能量与价电子的态密度相关，而其宽度反映了单电子跃迁(产生电子—空穴对)的衰减效应。</p><p>因此，我们可以利用等离子峰鉴定物相，由等离子体能量估算合金的组成。另外，我们也可以从等离子峰的强度来估计样品的厚薄，如果EELS中只有一个等离子峰，则说明样品很薄；如果出现了几个等离子峰，则说明样品较厚。在低能损失谱范围内，能损谱主要反映了电子从价带到导带的跃迁，而材料的电子特性主要由价电子决定，所以低能损失谱除了等离子峰之外还包含诸如成分、价键、介电常数、能带宽度、自由电子密度以及光学特性等有用信息。</p><p>当高能入射电子转移足够能量到价带中的电子上，价电子将跃迁到导带中的未占据态，这就是价电子的带内或带间跃迁。例如，通过电子与分子轨道(比如π轨道)相互作用，将在低能区域产生特征峰，有时也会造成等离子峰的移动。通过特征峰的强度变化和位置改变等特征，我们就可以确定其特有的相。但如果从高能入射电子转移的能量不足以使价带中的电子跃迁到导带上，则带间跃迁不能发生，因此电子能量损失谱中该能量范围内的电子强度将接近探测器的噪声水平。这部分能量范围就显示了禁界跃迁区，这也正好对应该材料的能带宽度。</p><p>从另一个角度来看，我们也可以把能量损失过程看成是快电子穿过样品时样品的介电响应，在能损谱20 eV 以内包含着介电常数的信息。比如通过EELS 技术，可以实现对材料局部(通常在纳米量级)介电常数的测量，这对半导体工业来说是非常有意义的。</p><h3 id="high-energy-region"><a href="#high-energy-region" class="headerlink" title="high energy region"></a>high energy region</h3><p>高能损失区一般是指能量损失大于50 eV 以上的区域，主要由电离损失峰、能量损失近边结构和广延精细结构三部分组成。从壳层理论我们知道，原子核周围K，L，M等壳层上的电子能量是不一样的，相对于外壳层价电子，越靠近原子核的内壳层，电子被原子核束缚得越紧。</p><p>换句话说，当高能入射电子与样品中的原子发生相互作用时，要让内壳层电子摆脱原子核的束缚，入射电子需要损失更高的能量。所以高能区域的电子能量损失谱由高能入射电子使材料中内壳层电子被激发而形成。定义对于某一受原子核束缚的内壳层电子发生电离所需要的最低能量为电离阈值Ec。</p><p>当转移到壳层电子上的能量E&gt;Ec时，由于电离散射截面的减小，电离几率反而逐渐降低。因此在谱中，能量为Ec时电子强度呈现激增，随着能量的进一步增加，电子强度逐渐降低到背景水平。总体来看，电离损失峰为近似三角形状或锯齿形状。电离峰的起始位置对应于内壳层电子电离所需的最低能量，元素及不同轨道电子电离所需最低能量的唯一性使得通过观察能损谱中电离峰的起始位置来确定元素的种类成为可能。</p><p>正是由于这种电离损失峰，能损谱成为微区成分在轻元素范围内重要的分析手段。比如，对于Li，需要大约55 eV 的能量才能电离一个K壳层的电子，所以相对应的能损电子会在高能损失区55 eV附近位置出现一个电离峰。另外，相对于等离子激发，电离非弹性散射截面相对较小，且由于平均自由程较大，以致内层电子被激发的概率要比等离子激发概率小2到3个数量级。</p><p>随着元素原子序数的增加，K壳层电子被原子核束缚得更紧，相应K壳层电子激发需要更大能量，且电离非弹性散射几率减小。在电子能量损失谱中，大约1000 eV 以上，K壳层电子电离峰强度将大幅降低且信噪比明显变差，这将不利于元素的鉴别和成分分析。</p><p>所以对于原子序数大的元素，我们一般使用它的L 和M电离峰。但是，L 和M系损失峰很容易与材料中轻元素的K系电离损失峰混淆，因此，在通过EELS 对重元素进行表征时，需要注意不同元素电离峰的叠加现象。</p><h4 id="energy-loss-near-edge-structure"><a href="#energy-loss-near-edge-structure" class="headerlink" title="energy-loss near-edge structure"></a>energy-loss near-edge structure</h4><p>在大于电离阈值Ec约50 eV 范围内，电子能量损失谱存在明显的精细结构振荡，这就是能量损失近边结构(energy-loss near-edge structure，ELNES)。当样品中的内壳层电子从入射电子获得足够能量时，壳层电子将从基态跃迁到激发态，而在内壳层留下一个空穴。但如果获得的能量不足以使其完全摆脱原子核的束缚成为自由电子，那么内壳层电子只能跃迁到费米能级以上导带中某一空的能级。</p><p>此时从入射电子获得的能量等于所激发壳层电子跃迁前后所处能级能量之差。虽然电子跃迁到导带中任意能级都是可能的，但导带中能级是分立的，且每一能级所能容纳电子的能力也是不一样的。又因电子跃迁而从入射电子获得的能量正好和能损谱中入射电子的损失能量相对应，我们可以通过电子能量损失谱中能损电子的强度分布得到样品中导带能级分布和态密度等电子结构信息。</p><p>因为电子能级分布和态密度(电子在一定能量范围内的相对分布)对原子间的成键和价态非常敏感，这些将直观的在ELNES 上反应出来。例如，金属Cu 氧化成Cu2O和CuO后，Cu 的L系ELNES也发生明显变化(如下图)。通过对比未知化合价态的铜的能损谱图与这些标准单一化合价态的标准谱图或其不同比例的线性拟合谱图，就可以判断铜元素的化合价态。目前这一方法已广泛应用于判断某些过渡金属(例如Fe，Co，Ni等)在不同化合物中的化学价态。</p><center><img src="https://s2.ax1x.com/2019/09/13/nrL1vn.png" alt> </center>]]></content>
      
      
      <categories>
          
          <category> Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Material Science </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SEM制样</title>
      <link href="/2019/03/13/SEM%E5%88%B6%E6%A0%B7/"/>
      <url>/2019/03/13/SEM%E5%88%B6%E6%A0%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="sample-pre-preparation"><a href="#sample-pre-preparation" class="headerlink" title="sample pre-preparation."></a>sample pre-preparation.</h1><p>干燥，无油，导电</p><blockquote><ul><li>水蒸气会加速电子枪阴极材料的挥发，从而极大降低灯丝寿命；水蒸气会散射电子束，增加电子束能量分散，从而增大色差，降低分辨能力。<ul><li>油污在电子束作用下极端容易分解成碳氢化物，对真空环境造成极大污染。样品表面细节被碳氢化合物遮盖；碳氢化合物降低了成像信号产量；碳氢化合物吸附在电子束光路引起极大象散；碳氢化合物被吸附在探测器晶体表面，降低探测器效率。对低加速电压的电子束干扰严重。</li><li>在大多数情况下，初级电子束电荷数量都大于背散射电子和二次电子数量之和，因此多余的电子必须导入地下，即样品表面电位必须保持在0电位。如果样品表面不导电，或者样品接地线断裂，那么样品表面静电荷存在，使得表面负电势不断增加，出现充电效应，使图像畸变，入射电子束减速，此时样品如同一个电子平面镜。</li></ul></li></ul></blockquote><h1 id="different-sample-preparation"><a href="#different-sample-preparation" class="headerlink" title="different sample preparation"></a>different sample preparation</h1><h2 id="block"><a href="#block" class="headerlink" title="block"></a>block</h2><p>对于块状导电样品，基本上不需要进行什么制备，只要其大小适合电镜样品底座尺寸大小，即可直接用导电胶带把样品黏结在样品底座上，放到扫描电镜中观察，为防止假象的存在，在放试样前应先将试样用丙酮或酒精等进行清洗，必要时用超声波清洗器进行清洗。对于块状的非导电样品或导电性较差的样品，要先进行镀膜处理，否则，样品的表面会在高强度电子束作用下产生电荷堆积，影响入射电子束斑和样品发射的二次电子运动轨迹，使图像质量下降，因此这类样品要在观察前进行喷镀导电层的处理，在材料表面形成一层导电膜，避免样品表面的电荷积累，提高图象质量，并可防止样品的热损伤。</p><h2 id="powder"><a href="#powder" class="headerlink" title="powder"></a>powder</h2><p>对于导电的粉末样品，应先将导电胶带黏结在样品座上，再均匀地把粉末样撒在上面，用洗耳球吹去未黏住的粉末，即可用电镜观察。对不导电或导电性能差的，要再镀上一层导电膜，方可用电镜观察。为了加快测试速度，一个样品座上可以同时制备多个样品，但在用洗耳球吹未黏住的粉末时，应注意不要样品之间相互污染。</p><h2 id="Particles-and-fibers"><a href="#Particles-and-fibers" class="headerlink" title="Particles and fibers"></a>Particles and fibers</h2><p>特点为大多数非导电样品，在电镜观察时候，往往静电排斥作用，机械不稳定。所谓样品漂移！ 小于1微米的尺度，电子束可能穿透样品，随后基底散射产生的信号，将使得图像反差降低。同时X射线信号会增加基底的成分。</p><p><strong>超声波振荡分散</strong>：一定量样品放入分散剂中进行分散，分散剂中往往加入表面活性剂。<br><strong>树脂分散</strong>： 把颗粒样品镶嵌在树脂中。</p><p>用碳导电胶带，直接沾一些颗粒或者纤维。绝缘的样品喷镀导电膜。</p><h2 id="semiconductors"><a href="#semiconductors" class="headerlink" title="semiconductors"></a>semiconductors</h2><p>一般的制备样品方法都适合。但有些特殊的反差机制，如电压反差，电子通道反差, 感生电流，样品电流等，半导体材料需要特殊的制备。</p>]]></content>
      
      
      <categories>
          
          <category> Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Material Science </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SEM的基本原理（Part 1）</title>
      <link href="/2019/03/10/SEM%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/"/>
      <url>/2019/03/10/SEM%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="SEM-basics"><a href="#SEM-basics" class="headerlink" title="SEM basics"></a>SEM basics</h1><p>我用一个对比来快速了解SEM。SEM主要由三部分构成：电子源(electron source),电磁透镜(electromagnetic lenses)以及探测器(electron detector)。</p><center><img src="https://s2.ax1x.com/2019/09/11/nwr4Ve.png" alt> </center><h2 id="electron-source"><a href="#electron-source" class="headerlink" title="electron source"></a>electron source</h2><p>电子枪，用于生产电子，目前最主要使用钨/六硼化镧作为发射源，通过<strong>热发射</strong>效应产生电子。区别于前两种发射源，目前最先进的场发射电子枪主要的发射机制不是靠加热阴极，而是在尖阴极表面增加强电场，从而降低阴极材料的表面势垒，并且可以使得表面势垒宽度变窄到纳米尺度，从而出现量子隧道效应，在常温甚至在低温下，将大量低能电子通过隧道发射到真空中。<br>相对于钨丝(尖端厚度10µm)，场发射使用的钨晶体(FEG)的厚度要小得多。</p><blockquote><ul><li>什么是热发射？<br>热发射（thermionic emission）是一种通过热激发发射载流子的方式。这个现象发生的原因是，提供给载流子的热能使它们能够克服束缚势能（在金属材料中，这束缚势能也被称为功函数或逸出功）。通过热发射产生的载流子可能是电子或者离子。发射载流子之后原始区域会产生一个于被发射载流子总和大小相同、极性相反的载流子。</li></ul></blockquote><center><img src="https://s2.ax1x.com/2019/09/11/nwcvyq.png" alt> </center><h2 id="electromagnetic-lenses"><a href="#electromagnetic-lenses" class="headerlink" title="electromagnetic lenses"></a>electromagnetic lenses</h2><p>热发射后的射线是锥形扩散，因此需要添加<strong>电磁透镜</strong>(electromagnetic lens)聚焦电子束。</p><blockquote><ul><li>电磁透镜一般分为两组<br>汇聚透镜：汇聚透镜用汇聚电子束<br>物镜：物镜为真空柱中最下方的一个电磁透镜，它负责将电子束的焦点汇聚到样品表面。</li></ul></blockquote><center><img src="https://s2.ax1x.com/2019/09/11/nwwyXF.png" alt> </center><h2 id="electron-detector"><a href="#electron-detector" class="headerlink" title="electron detector"></a>electron detector</h2><p>一旦电子束与样品相互作用，就可以检测到几种不同类型的信号。最常用的信号是二次电子(secondary electrons)，背向散射电子(backscattered electrons)，X射线(X-rays)，俄歇电子(Auger electrons)和光子(photons)。</p><center><img src="https://s2.ax1x.com/2019/09/11/nwcjln.png" alt> </center><h3 id="secondary-electron-detector-SED"><a href="#secondary-electron-detector-SED" class="headerlink" title="secondary electron detector(SED)"></a>secondary electron detector(SED)</h3><p>二次电子（SE）具有低能量（~2至50eV）。它们仅从靠近样品表面的位置喷出。为了吸引（收集）这些低能电子，在探测器的前端施加小的偏压以吸引负电子朝向探测器。</p><center><img src="https://s2.ax1x.com/2019/09/11/nwgZOx.png" alt> </center><h4 id="the-generation-of-secondary-electron"><a href="#the-generation-of-secondary-electron" class="headerlink" title="the generation of secondary electron"></a>the generation of secondary electron</h4><center><img src="https://s2.ax1x.com/2019/09/11/nwwg0J.gif" alt> </center><h4 id="secondary-electron-imaging"><a href="#secondary-electron-imaging" class="headerlink" title="secondary electron imaging"></a>secondary electron imaging</h4><center><img src="https://s2.ax1x.com/2019/09/13/nr1CAP.gif" alt> </center><h3 id="backscattered-electron-detector-BSD"><a href="#backscattered-electron-detector-BSD" class="headerlink" title="backscattered electron detector(BSD)"></a>backscattered electron detector(BSD)</h3><p>背散射电子探测器（BSD）安装在物镜极片下方。当入射电子束扫描样品表面时，产生背向散射电子（BSE）。产率受样品的地形，物理和化学特征控制。BSE比二次电子具有更高的能量，可以从样品表面下方提供信息。</p><h4 id="backscattered-electron-imaging"><a href="#backscattered-electron-imaging" class="headerlink" title="backscattered electron imaging"></a>backscattered electron imaging</h4><center><img src="https://s2.ax1x.com/2019/09/13/nr1Ptf.gif" alt> </center><blockquote><ul><li>Compo and Topo<br>Compo(For Composition):Atomic number contrasting imaging. Lighter elements appear darker while heavier elements appear brighter.<br>Topo(For Topography):Surface topography imaging similar to Secondary Electron imaging</li></ul></blockquote><h3 id="X-ray-detectors"><a href="#X-ray-detectors" class="headerlink" title="X-ray detectors"></a>X-ray detectors</h3><p>当电子束与样品相互作用时，发射X射线。这些X射线的能量取决于样品中存在的元素。用于检测样品发射的X射线的最常见系统是能量色散X射线光谱法（EDX）。</p><blockquote><ul><li>EDX和EDS的区别<br>EDX:Energy dispersive x-ray spectrometry<br>EDS:Energy dispersive spectrometer</li></ul></blockquote><h4 id="the-generation-of-X-ray"><a href="#the-generation-of-X-ray" class="headerlink" title="the generation of X-ray"></a>the generation of X-ray</h4><center><img src="https://s2.ax1x.com/2019/09/11/nww279.gif" alt> </center><h4 id="X-ray-imaging"><a href="#X-ray-imaging" class="headerlink" title="X-ray imaging"></a>X-ray imaging</h4><center><img src="https://s2.ax1x.com/2019/09/13/nr1p7t.gif" alt> </center><h2 id="electron-matter-interactions"><a href="#electron-matter-interactions" class="headerlink" title="electron-matter interactions"></a>electron-matter interactions</h2><p>通过动量定理将这些信号分类。<br>弹性散射：试样内的电子轨迹发生变化，但其动能和速度基本保持不变。结果是产生反向散射电子（BSE）。<br>非弹性散射：声子激发(放热)；阴极发光(可见光荧光)；特征X射线辐射;等离子体产生(二次电子);俄歇电子(外壳电子的喷射)。</p><center><img src="https://s2.ax1x.com/2019/09/11/nwcxO0.gif" alt> </center><h2 id="final-image"><a href="#final-image" class="headerlink" title="final image"></a>final image</h2><p>由于探测器是按点采集，最终图像由许多像素点拼接成。</p><center><img src="https://s2.ax1x.com/2019/09/11/nwrI5d.gif" alt> </center>]]></content>
      
      
      <categories>
          
          <category> Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Material Science </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科研仪器基本原理（一）</title>
      <link href="/2019/02/18/%E7%A7%91%E7%A0%94-%E4%BB%AA%E5%99%A8%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E4%B8%80/"/>
      <url>/2019/02/18/%E7%A7%91%E7%A0%94-%E4%BB%AA%E5%99%A8%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<p>动态力学行为是指材料在振动条件下，即在交变应力（交变应变）作用下做出的力学响应，即力学性能(模量、内耗)与温度、频率的关系。</p><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><h3 id="Viscoelasticity"><a href="#Viscoelasticity" class="headerlink" title="Viscoelasticity"></a>Viscoelasticity</h3><ul><li><p>弹性变形体系：应力与应变成正比，满足胡克定律；外力去除后，变形可以完全恢复。外力所做的功完全转化为体系的势能。σ为应力，E为弹性模量，ε为应变。</p><center><font size="5">σ=Eε</font> </center></li><li><p>粘性体系：外力作用下所产生的变形完全不能恢复，外力对体系所做的功完全转化为热能消耗掉。变形满足牛顿定律（广义上水是牛顿流体）。</p></li><li><p>粘弹性体系 Viscoelasticity：在外力作用下，聚合物分子链由卷曲状态转变为伸展，力学行为既不服从虎克定律，也不服从牛顿定律，而是介于两者之间。当受到外力时，粘弹性材料的应变随时间作非线性变化，去除外力，所产生的形变随时间逐渐且部分回复，其中弹性形变部分可以回复，黏性形变部分不能回复。外力对粘弹体所做的功一部分以弹性能的形式储存起来，另一部分则以热能的形式消耗掉了。<strong>同时具有粘性和弹性两种特性</strong>。</p></li></ul><h3 id="Stress-and-Strain"><a href="#Stress-and-Strain" class="headerlink" title="Stress and Strain"></a>Stress and Strain</h3><ul><li>完全弹性体系：如图1（a）所示当材料受到正弦交变应力作用时，应变对应力的响应是瞬间的，每一周期能量无损耗，此时有：</li></ul><center><img src="https://s2.ax1x.com/2019/02/18/k6q89P.png" alt> </center><ul><li>完全粘性体系，如图1（b）所示，应变响应滞后于应力90°相位角；<blockquote><ul><li>什么是90°相位角？<br>牛顿定律：F=ηr F为剪切力，η为粘度系数，r为切变速度,<strong>应变为切变速度的导数</strong>。</li></ul></blockquote></li></ul><center><img src="https://s2.ax1x.com/2019/02/18/k6q1ht.png" alt> </center><ul><li>对于粘弹性材料，应变将始终滞后于应力0°-90°的相位角δ，如图1（c）所示并且应力应变可以用下式来表达：</li></ul><center><img src="https://s2.ax1x.com/2019/02/18/k6qJc8.png" alt> </center><center><img src="https://s2.ax1x.com/2019/02/18/k6bOf0.png" alt="图1应力（应变）正弦曲线曲线"> </center><p>对于聚合物粘性体系，应力与应变存在相位差</p><center><img src="https://s2.ax1x.com/2019/02/18/k6qYjS.png" alt> </center><p>将（3）展开，可以得到：</p><center><img src="https://s2.ax1x.com/2019/02/18/k6qltI.png" alt> </center><p>结合（2）、（4），可以得到：</p><center><img src="https://s2.ax1x.com/2019/02/18/k6qwAs.png" alt> </center><p>其中，ω是角频率，δ是相位角，σ0是应力峰值，ε0是应变峰值。</p><center><img src="https://s2.ax1x.com/2019/02/18/k6qUBQ.png" alt></center><p>贮能模量：表示在应力作用下能量在样品中的贮存能力，同时也是材料刚性的反映；</p><center><img src="https://s2.ax1x.com/2019/02/18/k6qa7j.png" alt> </center><p>损耗模量：与应变相位差90度；表示能量的损耗程度，是材料耗散能量的能力反映；</p><center><img src="https://s2.ax1x.com/2019/02/18/k6qNng.png" alt> </center><p>内耗：应力应变相位角之正切值，是材料贮能与耗能能力的相对强度。</p><h2 id="Dynamic-mechanical-analysis"><a href="#Dynamic-mechanical-analysis" class="headerlink" title="Dynamic mechanical analysis"></a>Dynamic mechanical analysis</h2><p>DMA工作原理——强迫非共振法</p><blockquote><ul><li>试样分别与驱动器、应变位移传感器相连接</li><li>驱动器将一定频率的正弦交变作用施加到试样上</li><li>由应变位移传感器检测出应变的正弦信号</li><li>通过应力振幅与应变振幅的位置比较，得到应力与应变的相位差</li><li>经过仪器的自动处理，得到储能模量E´、损耗模量E”、力学损耗tgδ</li></ul></blockquote><h3 id="Typical-DMA-Spectral-T-Hz"><a href="#Typical-DMA-Spectral-T-Hz" class="headerlink" title="Typical DMA Spectral-T/Hz"></a>Typical DMA Spectral-T/Hz</h3><p>温度扫描模式——在固定频率下，测量动态模量及力学损耗随温度的变化。所得曲线称动态力学温度谱，为动态力学分析中最常使用的模式，如图2所示。</p><center><img src="https://s2.ax1x.com/2019/02/18/k6XUBD.png" alt="图2 聚合物的DMA曲线（温度谱） "> </center><h3 id="Typical-DMA-Spectral-Frequency-Sweep"><a href="#Typical-DMA-Spectral-Frequency-Sweep" class="headerlink" title="Typical DMA Spectral-Frequency Sweep"></a>Typical DMA Spectral-Frequency Sweep</h3><p>频率扫描模式——在固定温度下，测量动态模量及力学损耗随频率的变化。所得曲线称动态力学频率谱，如图3所示。</p><center><img src="https://s2.ax1x.com/2019/02/18/k6vKY9.png" alt="图3 聚合物的DMA曲线（频率谱） "> </center>]]></content>
      
      
      <categories>
          
          <category> Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Material Science </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>此刻这就是星辰大海</title>
      <link href="/2019/02/07/title%E2%80%9D/"/>
      <url>/2019/02/07/title%E2%80%9D/</url>
      
        <content type="html"><![CDATA[<p><br>相传，北海有鱼，其名为鲲，可变化为鹏鸟，不知有几千里长。<br><br><br>又传，鹏鸟迁徙时，击打水面，可起波涛三千里，奋起而飞，直冲云上九万里。<br><br><br>庄子下的鹏鸟，以一瞬千里之速，完成耗时六月的漫长迁徙，而后世的作者，则想象道，这比鹏鸟还要巨大的星球，将在无尽的星辰间，历经二千五百年的漂泊，其行迹已非万里能够度量。<br><br><br>《流浪地球》大概呈现了中国电影史上至今可谓最富想象力的奇观，至于加与不加一个“之一”，却已然无谓，因为光是以人力推动整个星球的流浪，就足以令人拍案惊奇。当地球的苍蓝轨迹与木星的橙黄漩涡在银幕上交融，这一刻的星河壮阔，将长久铭记于观众眼帘，而人类所居的天地在这宇宙间之渺小，更是一览无遗，引人唏嘘感叹。鲲之大，不知其几千里，但纵巨如鲲，也不过北海一鱼而已。<br><br><br>对于心中仍有星空的人们来说，仅是此行星浪迹于寰宇的视觉盛宴，就足够吸引他们走入影院，在巨幕与声浪间享受这科幻电影特有的，以仪器、机械、人力为翼，将科学、技术、幻想作骨，用奇梦巧思编织而成的光影歌剧。<br><br><br>喷涌蓝色光焰的万台行星发动机屹立于大地之上，曾经的东方明珠被永远冻结于一望无际的冰层，飘荡在太空的空间站舞动它银白的硕大身躯，木星那横亘万里的风暴气旋宛若死兆般凝视即将被吞噬的地球，本片的主要场景都在彰显着剧组将经费真正地用在锋芒的诚意，对一部商业科幻片来说，特效到位是它对观众最基本的尊重。而这估计也会让长期饱受某些标榜数亿投资的中国式伪大片，如被泡面宣传画欺诈般的人们，怀疑本片华丽得根本不像是一部投资不过五千万美元的国产电影。<br><br><br>更可贵的是，本片的特效并非仅着眼于宏大叙事，或者用现成的软件素材做光污染，而是尤为注重对细节的把握。从开场即用一系列新闻报道的蒙太奇，而不是纯粹人物交谈的偷工形式，推出了太阳即将消亡，人类不得不建造万台行星发动机并移居地下城，推动地球前往其他星系的恢弘背景设定。本片展现的，人们身穿的精密太空服、电子设备上密布的线路仪表、软件操作界面的多种语言，皆是营造一部科幻电影“真实感”的至微之处。甚至某种意义上可以说，科幻电影可以不完全符合科学，就如军事影视作品，基本很少还原现代兵器的真实威力。但科幻电影一定要让人们相信，它“真的挺科学”，否则就丧失了其立足之根，而与魔幻电影混同。<br><br><br>对一部科幻电影的极糟评语就是“这片子太假”，这代表人们对它已没有对科学的尊重敬畏，只剩下对虚应用事，或仅是成事不足的出品方的嘲笑。这种否定，更常常会伴随着残酷的票房，因为科幻电影的传统观影人群，即使不具备足够的知识，也起码对科学会保有信任与尊敬，一部科幻片若是连科学都做不到，其幻想就只是在科幻爱好者面前的妄语而已。这一次，《流浪地球》很好地将幻想的壮丽和科学的细致结合在了一起，就算在世界科幻影坛，出类拔萃或许尚难论及，但已足以立锥，毫不客气的说，发达如好莱坞电影工业，也未见得能年产多少超过《流浪地球》的科幻商业片。<br><br><br>视觉的享受保障了《流浪地球》至少不会辜负观众的票价，而本片的故事线，则能支撑这部电影昂首于近些年来叙事常有浮夸浮躁、不明所以、不知所谓的国产电影之林。本片分为了双线叙事，一条是地球上人们面对地木双星即将相撞的这一危机时刻的竭力自救，另一条则是身居安逸空间站的宇航员却始终心系地球并找寻方法拯救人类。在双线推进故事的进程中，揉入了父与子、老与少、兄与妹、队长与队友等多重人物关系情感线，绘制了一副灾难面前的众生真情浮世绘。就整体故事节奏来说，则是百转千回，于绝境和希望间挣扎起伏，尤其是影片后半段，可谓高潮迭起，在至暗时刻求得些微生存烛光，却又不停被更为残酷的现实与选择粉碎这点本已显得不可能的希望，引导观众思绪，惊若翩鸿，婉若游龙，直向未知的结局奔涌，只想尽快见证人类于此极寒永夜，又应做何种选择，又将有何等能为。<br><br><br>众所周知，刘慈欣先生的笔下，对人性常有悲观的态度，毕竟他甚至都写过，天真无邪的儿童们掌握世界后，会进行比成人更为残酷的战争游戏来互相杀戮。在这次大刘总监制的《流浪地球》中，人性的暗面也一如既往被呈现，面临末日，许多人们丧失秩序，放弃责任，一味逃避，世间因为人们主动放弃了希望才沦为绝望。但大刘又不仅仅是一位刻薄的射手，他的故事里，始终也会有一朝闻道，愿意为他人夕死可矣的人物，他们的存在，可谓温暖了大刘那些理性冰冷的故事。他们受苦难，是为叫人们得安慰得拯救，他们得安慰，也是为叫人们得安慰，这安慰能叫人们忍受他们那样的苦楚。即使在这纷乱的尔虞我诈、自说自话、各行其是的世间， 他们依旧圣行无悔，这就是人类精神的至高荣光。<br><br><br>不知道这是否算大刘对人性的一丝温柔，但本片中，闪光的确仍在。《流浪地球》以灾难这个人类艺术的永恒命题之一，用人物面对生与死、聚和散、战与逃的选择，展现了仍未被即将的灭亡所熄灭的人类精魂。勇气与意志，这是贯穿人类历史的全部，人类的圣歌，永不缺少勇气的赞歌，人类的强大，就是意志的伟大。灾难可以消灭个体，可以毁灭族群，但它却未能破灭人类对希望的信仰。生命是注定终结之物，但传承让人类能够延续对未来的希翼，活下去的愿望，使人类可以皆强大。<br><br><br>当然，《流浪地球》并非完美的作品，也挺容易挑出这部电影的不足。比如或许由于多人编剧对幽默系数把握不同，这部片子有些地方刻意为之的段子，却并不能都激起人们笑点，反而有脱离生活语境的跳脱感。再如本片前半段的配乐略显沉闷，过于冷静，有时候没法和本应该激烈冲突的场景搭调调动观众情绪预热。又如和几位老演员的扎实表现相较，几位年轻主演的表演则最多只能说中规中矩，人物情感个性转变的过渡尚欠平稳而略显急躁。最后本片的几处煽情台词还是略欠打磨，不够符合于情境，显得缺乏了真实人类对话的平实感，也就削弱了感人情节里本应有的于弹指间动人心弦的意境。<br><br><br>如果这些缺点用于考虑评奖，那自然《流浪地球》在艺术片里，并不能排上号，甚至也说不上是什么有学院气息的作品。这就是一部刺激人们肾上腺素，赞颂人类勇气与意志的商业科幻电影。然而，这是中国科幻电影，是已经被大多数观众忽视、遗忘了太久的，是请不起流量明星的，是资本市场不敢投入的，中国电影发展到春节档都能有百亿票房，却前无古人的，真正意义上大投入、大制作的中国科幻电影。金钱并不足以成就一部好的科幻商业片，但没有金钱却万万寸步难行，特效的制作需要人员、技术、设备的投入，而且往往已超出一国电影产业链所能，跨国的制作协调，需要足够的经验积累，而拥有扎实科学功底，并能对科学前沿进行大胆想象的编剧也理应获得更值得的回报。《流浪地球》的意义，不在于其伟大，而在于其这次实现了，在新千年中燃起了中国科幻电影的薪火，这值得全体中国科幻爱好者的由衷致谢。<br><br><br>在可以想见的未来非议中，必然会有某些云观众，又要习惯性以本片只突出中国人之类的狭隘，来攻击这部电影。朝菌不知晦朔，夏虫不可语冰，与此等人的争论辩白，自然会是徒劳的。<br><br><br>事未经历不知难，在现实引力的沉重中，仍有人愿意让中国科幻的梦，离开这重力的井底，冉冉升起，这本身就是一曲勇气与意志之歌。<br><br><br>地球可以在故事里流浪，但中国科幻还应航向前方。<br><br><br>鲲终能化为鹏，中国科幻的未来，我仍愿意相信会是一片星辰大海。<br>至少此刻，《流浪地球》，已是星辰大海。<br></p>]]></content>
      
      
      <categories>
          
          <category> Emotion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NMR的基本原理</title>
      <link href="/2018/09/09/NMR%E5%9C%A8%E9%94%82%E7%94%B5%E6%B1%A0%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/"/>
      <url>/2018/09/09/NMR%E5%9C%A8%E9%94%82%E7%94%B5%E6%B1%A0%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="NMR-basics"><a href="#NMR-basics" class="headerlink" title="NMR basics"></a>NMR basics</h1><h2 id="Spin"><a href="#Spin" class="headerlink" title="Spin"></a>Spin</h2><p>在量子力学中，<strong>自旋</strong>（Spin）是粒子所具有的内禀性质，其运算规则类似于经典力学的角动量，并因此产生一个磁场。NMR所检测的原子核中含有质子、中子这样亚原子粒子，他们的自旋通常指的总角动量，即亚原子粒子的自旋角动量和轨道角动量的总和。</p><blockquote><p>*中子作为电中性粒子为什么可以自旋也能产生磁场？<br>中子作为亚原子粒子，本质由三种夸克这种基本粒子组成，三种夸克的净电荷为零使得中子呈电中性，然而三种夸克自旋的总角动量不为零，因而具有微小但非零的磁矩。</p></blockquote><h3 id="Pauli-exclusion-principle"><a href="#Pauli-exclusion-principle" class="headerlink" title="Pauli exclusion principle"></a>Pauli exclusion principle</h3><p>质子与中子作为自旋为1/2的粒子，遵循费米-狄拉克统计，因而他们是<strong>费米子</strong>（fermion）中的成员。所有费米子都服从<strong>泡利不相容原理</strong>（Pauli exclusion principle），泡利原理表明，两个全同的费米子不能处于相同的量子态。换句话说处于同一原子轨域的两个同种费米子必定拥有相反的自旋方向。</p><h3 id="Nuclear-spin"><a href="#Nuclear-spin" class="headerlink" title="Nuclear spin"></a>Nuclear spin</h3><p>质子与中子共同构成了原子核，整个原子核的自旋看上去很“<strong>复杂</strong>”。然而根据泡利原理，我们可以很容易的得到原子核的自旋。这里我们引入一个新的定义：<strong>净自旋</strong>（Net Spin），当同一能级存在两个质子时，由于泡利原理的限制，其中一个质子自旋为1/2，那么另一个质子的自旋为-1/2。二者自旋角动量相互抵消，此时的净自旋为0.<br>只有净自旋不为0的原子核才能够产生磁矩被NMR检测。显然并不是所有元素都能被NMR所识别。</p><center><img src="https://s2.ax1x.com/2019/09/10/nakxWF.png" alt> </center><h2 id="Nucleus-in-magnetic-field"><a href="#Nucleus-in-magnetic-field" class="headerlink" title="Nucleus in magnetic field"></a>Nucleus in magnetic field</h2><p>我们将原子核类比为一个小磁铁，在正常状态下，原子核做无规运动，此时的磁矩方向也是随机分布。我们在Z轴上给予一个恒定磁场B0，原子核在磁场的作用下其磁矩与磁场方向平行，而这时原子核在磁场中存在两种分布，一种磁矩方向与磁场方向相同（<strong>α-spin</strong>），而另外一种与磁场方向相反（<strong>β-spin</strong>）。</p><center><img src="https://s2.ax1x.com/2019/09/10/naApQJ.png" alt> </center><br><center><img src="https://s2.ax1x.com/2019/09/10/naACLR.png" alt> </center><br><center><img src="https://s2.ax1x.com/2019/09/10/naA9y9.png" alt> </center><blockquote><ul><li>为什么存在β-spin？<br>实际上原子核的自旋并不是与磁场方向垂直，而是有一定角度(如图)，这种自转轴绕着另一轴旋转的现象也叫<strong>进动</strong>(Precession)，这样在施加磁场后，最终的自旋角动量便拥有两种自旋方向。其中β-spin的原子核具有更高的能量，且能量大小与施加的场强B0成正比。<center><img src="https://s2.ax1x.com/2019/09/10/nakLd0.png" alt> </center></li></ul></blockquote><h2 id="RF-radiation"><a href="#RF-radiation" class="headerlink" title="RF radiation"></a>RF radiation</h2><p>由于原子核存在α-spin与β-spin，这两者的能量差称之为ΔE，当施加一定大小的射频辐射时(RF radiation),根据光子能量公式，只有一定频率的能量才能被吸收。这时在Frequency中便可以检测到特定频率被吸收，这便是NMR的基本原理。</p><center><img src="https://s2.ax1x.com/2019/09/10/nakzz4.png" alt> </center><br><center><img src="https://s2.ax1x.com/2019/09/10/nakOoV.png" alt> </center><br><center><img src="https://s2.ax1x.com/2019/09/10/nakvJU.png" alt> </center><br>我们通过一组动态图更直观的观察原子核在磁场下的运动模式。<br><br>首先空间无序分布的所有原子拥有竖直与水平两种方向的分量，由于<strong>玻尔兹曼分布</strong>使得竖直方向矢量向上。<br>&gt; *什么是玻尔兹曼分布？<br>简单理解，通常情况下，在正温度范围内，处于低能级的原子数量要大于处于高能级的原子数量，这种分布模式在物理中被称为“玻尔兹曼分布”（Boltzmann distribution）。<br><center><img src="https://s2.ax1x.com/2019/09/18/nHjDDH.gif" alt> </center><br>接着在磁场作用下，所有原子从低能级跃迁到高能级(竖直方向矢量向下移动)，水平方向上原本处于不同相位的原子向相同方向进动。最终所有原子在水平方向上拥有了相同的角动量。<br><center><img src="https://s2.ax1x.com/2019/10/25/KwrYZV.gif" alt> </center><br><center><img src="https://s2.ax1x.com/2019/09/18/nHjwvD.gif" alt> </center><br><center><img src="https://s2.ax1x.com/2019/09/18/nHjUC6.gif" alt> </center><br>接着撤除磁场，经过一段时间后原子重新回到初始状态。而仪器则记录原子从被约束到恢复自由这个过程。<br><center><img src="https://s2.ax1x.com/2019/09/18/nHjdgO.gif" alt> </center><br><center><img src="https://s2.ax1x.com/2019/09/18/nHjBKe.gif" alt> </center><h2 id="Compound-in-magnetic-field"><a href="#Compound-in-magnetic-field" class="headerlink" title="Compound in magnetic field"></a>Compound in magnetic field</h2><p>然而NMR检测的化合物，每一个原子核都不会完美的在磁场中呈现出α-spin。原子核会受到周围电子的影响而形成<strong>电磁屏蔽</strong>效应。这时我们再施加RF，其中受到电磁屏蔽的原子核旋转到β-spin时的能量(<strong>E2</strong>)会小于理想状态下由α-spin转动至β-spin时所需的能量(<strong>E1</strong>)。这时能观察到不同程度shield的原子核在坐标系上的分布。</p><center><img src="https://s2.ax1x.com/2019/09/11/ndKX59.png" alt> </center><br><center><img src="https://s2.ax1x.com/2019/09/11/ndKOUJ.png" alt> </center><br><center><img src="https://s2.ax1x.com/2019/09/11/ndKvCR.png" alt> </center><h2 id="Upfield-and-downfield"><a href="#Upfield-and-downfield" class="headerlink" title="Upfield and downfield"></a>Upfield and downfield</h2><p>这里我们接着引入一个新的定义:<strong>有效磁场</strong>(B-effective),他的大小等于施加磁场大小(B-applied)减去电磁屏蔽所产生的磁场(B-local)，屏蔽效应越大，磁场效应越小，导致共振频率降低，我们一般称此现象的原子核位于<strong>高场区</strong>(Upfield)。反之屏蔽效应越小，磁场效应越大，共振频率变大，此原子核位于<strong>低场区</strong>(Downfield)。</p><center><img src="https://s2.ax1x.com/2019/09/11/ndNf1g.png" alt> </center>]]></content>
      
      
      <categories>
          
          <category> Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Material Science </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO操作指南（二）</title>
      <link href="/2018/02/12/hexo%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C%E4%BA%8C/"/>
      <url>/2018/02/12/hexo%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<h2 id="使用前提"><a href="#使用前提" class="headerlink" title="使用前提"></a>使用前提</h2><p>经常碰到这种情况：当你在一个Git 项目上工作时，你需要在其中使用另外一个Git 项目。也许它是一个第三方开发的Git 库或者是你独立开发和并在多个父项目中使用的。这个情况下一个常见的问题产生了：你想将两个项目单独处理但是又需要在其中一个中使用另外一个。</p><p>在Git 中你可以用子模块<code>submodule</code>来管理这些项目，<code>submodule</code>允许你将一个Git 仓库当作另外一个Git 仓库的子目录。这允许你克隆另外一个仓库到你的项目中并且保持你的提交相对独立。</p><h2 id="添加子模块"><a href="#添加子模块" class="headerlink" title="添加子模块"></a>添加子模块</h2><p>此文中统一将远程项目<code>https://github.com/maonx/vimwiki-assets.git</code>克隆到本地`assets文件夹。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule add https://github.com/maonx/vimwiki-assets.git assets</span><br></pre></td></tr></table></figure></p><p>添加子模块后运行<code>git status</code>, 可以看到目录有增加1个文件<code>.gitmodules</code>, 这个文件用来保存子模块的信息。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line">On branch master</span><br><span class="line"></span><br><span class="line">Initial commit</span><br><span class="line"></span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git rm --cached &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">    new file:   .gitmodules</span><br><span class="line">    new file:   assets</span><br></pre></td></tr></table></figure></p><h2 id="查看子模块"><a href="#查看子模块" class="headerlink" title="查看子模块"></a>查看子模块</h2><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git submodule</span><br><span class="line"> e33f854d3f51f5ebd771a68da05ad0371a3c0570 assets (<span class="name">heads/master</span>)</span><br></pre></td></tr></table></figure><h2 id="更新子模块"><a href="#更新子模块" class="headerlink" title="更新子模块"></a>更新子模块</h2><h3 id="更新项目内子模块到最新版本"><a href="#更新项目内子模块到最新版本" class="headerlink" title="更新项目内子模块到最新版本"></a>更新项目内子模块到最新版本</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">git</span> <span class="keyword">submodule </span>update</span><br></pre></td></tr></table></figure><h3 id="更新子模块为远程项目的最新版本"><a href="#更新子模块为远程项目的最新版本" class="headerlink" title="更新子模块为远程项目的最新版本"></a>更新子模块为远程项目的最新版本</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule <span class="keyword">update</span> <span class="comment">--remote</span></span><br></pre></td></tr></table></figure><h2 id="克隆包含子模块的项目"><a href="#克隆包含子模块的项目" class="headerlink" title="克隆包含子模块的项目"></a>克隆包含子模块的项目</h2><p>克隆包含子模块的项目有二种方法：一种是先克隆父项目，再更新子模块；另一种是直接递归克隆整个项目。</p><h3 id="克隆父项目，再更新子模块"><a href="#克隆父项目，再更新子模块" class="headerlink" title="克隆父项目，再更新子模块"></a>克隆父项目，再更新子模块</h3><p>克隆父项目</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/maonx/vimwiki-assets.git assets</span><br></pre></td></tr></table></figure><p>查看子模块</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">git</span> <span class="keyword">submodule</span></span><br><span class="line"><span class="keyword"> </span>-e33f854d3f51f5ebd771a68da05ad0371a3c0570 assets</span><br></pre></td></tr></table></figure><p>子模块前面有一个-，说明子模块文件还未检入（空文件夹）。</p><p>初始化子模块</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git submodule init</span><br><span class="line">Submodule <span class="string">'assets'</span> (https:<span class="regexp">//gi</span>thub.com<span class="regexp">/maonx/</span>vimwiki-assets.git) registered <span class="keyword">for</span> path <span class="string">'assets'</span></span><br></pre></td></tr></table></figure><p>初始化模块只需在克隆父项目后运行一次。</p><p>更新子模块</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git submodule update</span><br><span class="line">Cloning into <span class="string">'assets'</span>...</span><br><span class="line"><span class="string">remote:</span> Counting <span class="string">objects:</span> <span class="number">151</span>, done.</span><br><span class="line"><span class="string">remote:</span> Compressing <span class="string">objects:</span> <span class="number">100</span>% (<span class="number">80</span>/<span class="number">80</span>), done.</span><br><span class="line"><span class="string">remote:</span> Total <span class="number">151</span> (delta <span class="number">18</span>), reused <span class="number">0</span> (delta <span class="number">0</span>), pack-reused <span class="number">70</span></span><br><span class="line">Receiving <span class="string">objects:</span> <span class="number">100</span>% (<span class="number">151</span><span class="regexp">/151), 1.34 MiB | 569.00 KiB/</span>s, done.</span><br><span class="line">Resolving <span class="string">deltas:</span> <span class="number">100</span>% (<span class="number">36</span>/<span class="number">36</span>), done.</span><br><span class="line">Checking connectivity... done.</span><br><span class="line">Submodule path <span class="string">'assets'</span>: checked out <span class="string">'e33f854d3f51f5ebd771a68da05ad0371a3c0570'</span></span><br></pre></td></tr></table></figure><h3 id="递归克隆整个项目"><a href="#递归克隆整个项目" class="headerlink" title="递归克隆整个项目"></a>递归克隆整个项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/maonx/vimwiki-assets.git assets --recursive</span><br></pre></td></tr></table></figure><p>递归克隆整个项目，子模块已经同时更新了，一步到位。</p><h2 id="修改子模块"><a href="#修改子模块" class="headerlink" title="修改子模块"></a>修改子模块</h2><p>在子模块中修改文件后，直接提交到远程项目分支。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git ci -m <span class="string">"commit"</span></span><br><span class="line">git push origin HEAD:master</span><br></pre></td></tr></table></figure><h2 id="删除子模块"><a href="#删除子模块" class="headerlink" title="删除子模块"></a>删除子模块</h2><p><strong>删除子模块比较麻烦，需要手动删除相关的文件，否则在添加子模块时有可能出现错误</strong><br>同样以删除<code>assets</code>文件夹为例</p><p>删除子模块文件夹</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git rm --cached assets</span><br><span class="line">rm -rf assets</span><br></pre></td></tr></table></figure><p>删除<code>.gitmodules</code>文件中相关子模块信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[submodule <span class="string">"assets"</span>]</span><br><span class="line">  path = assets</span><br><span class="line">  url = https://github.com/maonx/vimwiki-assets.git</span><br></pre></td></tr></table></figure><p>删除<code>.git/config</code>中的相关子模块信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[submodule <span class="string">"assets"</span>]</span><br><span class="line">  url = https://github.com/maonx/vimwiki-assets.git</span><br></pre></td></tr></table></figure><p>删除<code>.git</code>文件夹中的相关子模块文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf .git/modules/assets</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO操作指南（一）</title>
      <link href="/2018/02/11/hexo%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/"/>
      <url>/2018/02/11/hexo%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<h2 id="Intall"><a href="#Intall" class="headerlink" title="Intall"></a>Intall</h2><p>下载并安装<a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a>和<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">Node.js</a>.（安装完后最好重启电脑）</p><p>鼠标右键任意地方，选择Git Bash，使用以下命令安装hexo<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></p><p>如果这里出现WARN并没有关系.<br>使用以下命令,查看安装是否成功:<br>鼠标右键任意地方，选择Git Bash，使用以下命令安装hexo<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo v</span><br></pre></td></tr></table></figure></p><p>如果安装成功,你就会看到各种版本信息:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">hexo-cli: <span class="number">1.0</span><span class="number">.1</span></span><br><span class="line">os: Windows_NT <span class="number">6.1</span><span class="number">.7601</span> win32 x64</span><br><span class="line">http_parser: <span class="number">2.5</span><span class="number">.2</span></span><br><span class="line">node: <span class="number">4.4</span><span class="number">.3</span></span><br><span class="line">v8: <span class="number">4.5</span><span class="number">.103</span><span class="number">.35</span></span><br><span class="line">uv: <span class="number">1.8</span><span class="number">.0</span></span><br><span class="line">zlib: <span class="number">1.2</span><span class="number">.8</span></span><br><span class="line">ares: <span class="number">1.10</span><span class="number">.1</span>-DEV</span><br><span class="line">icu: <span class="number">56.1</span></span><br><span class="line">modules: <span class="number">46</span></span><br><span class="line">openssl: <span class="number">1.0</span><span class="number">.2</span>g</span><br></pre></td></tr></table></figure></p><p>如果在执行<code>nmp install hexo-cli -g</code>卡住不动,执行以下命令.由于官方npm源有时链接不通，故将源指向国内下载地址.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm --registry http://registry.cnpmjs.org info underscore</span><br></pre></td></tr></table></figure></p><p>创建文件夹（如E:\hexo）, 并在这个文件夹内右键Git bash Here,执行命令:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo install</span><br></pre></td></tr></table></figure></p><p>查看hexo文件夹带来什么:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></p><p>用浏览器访问 (<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> ) 此时，你应该看到了一个漂亮的本地博客.</p><p>如果是从Git上download到本地，则在解压后的文件夹内使用git bash直接输入<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo --save</span><br></pre></td></tr></table></figure></p><p>随后便可进行如上操作查看博客内容。</p><h2 id="注册GitHub"><a href="#注册GitHub" class="headerlink" title="注册GitHub"></a>注册GitHub</h2><p><br>极其简单.我不写了. 假设这里创建的信息:<br><br><br>用户名: huixueee<br><br><br>注册邮箱: <a href="mailto:huixueee@163.com" target="_blank" rel="noopener">huixueee@163.com</a><br></p><h2 id="创建repository"><a href="#创建repository" class="headerlink" title="创建repository"></a>创建repository</h2><p><br><strong>注意</strong>:这里的repository 名称只能为: huixueee.github.io<br><br><br>千万要注意!这里的名称,是不能使用一个随便的repository!!<br></p><h2 id="部署本地文件到GitHub"><a href="#部署本地文件到GitHub" class="headerlink" title="部署本地文件到GitHub"></a>部署本地文件到GitHub</h2><p>编辑E:\hexo下的_config.yml文件<br>在文件的最后加入代码:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/xiaoming/xiaoming.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><p>执行以下命令:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p>出现错误:<br><strong>ERROR Deployer not found : git</strong></p><p>执行命令:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p>接下来又是一个错误, 这个错误是:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Setting up Git deployment...</span><br><span class="line">Initialized empty Git repository <span class="keyword">in</span> E:/hexo/.deploy_git/.git/</span><br><span class="line"></span><br><span class="line">*** Please tell me who you are.</span><br><span class="line"></span><br><span class="line">Run</span><br><span class="line"></span><br><span class="line">  git config --<span class="keyword">global</span> user.email <span class="string">"you@example.com"</span></span><br><span class="line">  git config --<span class="keyword">global</span> user.name <span class="string">"Your Name"</span></span><br><span class="line"></span><br><span class="line">to set your account<span class="string">'s default identity.</span></span><br><span class="line"><span class="string">Omit --global to set the identity only in this repository.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">fatal: unable to auto-detect email address (got '</span>dan@dan-PC.(none)<span class="string">')</span></span><br><span class="line"><span class="string">FATAL Something'</span>s wrong. Maybe you can find the solution here: http://hexo.io/do</span><br><span class="line">cs/troubleshooting.html</span><br><span class="line">Error:</span><br><span class="line">*** Please tell me who you are.</span><br><span class="line"></span><br><span class="line">Run</span><br><span class="line"></span><br><span class="line">  git config --<span class="keyword">global</span> user.email <span class="string">"you@example.com"</span></span><br><span class="line">  git config --<span class="keyword">global</span> user.name <span class="string">"Your Name"</span></span><br><span class="line"></span><br><span class="line">to set your account<span class="string">'s default identity.</span></span><br><span class="line"><span class="string">Omit --global to set the identity only in this repository.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">fatal: unable to auto-detect email address (got '</span>XXX@XXX-PC.(none)<span class="string">')</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    at ChildProcess.&lt;anonymous&gt; (E:\hexo\node_modules\hexo-deployer-git\node_mod</span></span><br><span class="line"><span class="string">ules\hexo-util\lib\spawn.js:37:17)</span></span><br><span class="line"><span class="string">    at emitTwo (events.js:87:13)</span></span><br><span class="line"><span class="string">    at ChildProcess.emit (events.js:172:7)</span></span><br><span class="line"><span class="string">    at ChildProcess.cp.emit (E:\hexo\node_modules\hexo-deployer-git\node_modules</span></span><br><span class="line"><span class="string">\hexo-util\node_modules\cross-spawn\node_modules\cross-spawn-async\lib\enoent.js</span></span><br><span class="line"><span class="string">:37:29)</span></span><br><span class="line"><span class="string">    at maybeClose (internal/child_process.js:827:16)</span></span><br><span class="line"><span class="string">    at Process.ChildProcess._handle.onexit (internal/child_process.js:211:5)</span></span><br><span class="line"><span class="string">FATAL</span></span><br></pre></td></tr></table></figure></p><p>这个错误是因为当前本地的Git还没配置用户信息, 所以执行以下命令:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="keyword">global</span> user.email <span class="string">"huixueee@163.com"</span></span><br><span class="line"></span><br><span class="line">git config --<span class="keyword">global</span> user.name <span class="string">"huixueee"</span></span><br><span class="line"></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p><br>此时,会要求输入用户名, 你就输入你的用户名: huixueee<br><br>接着要求输入密码, 你就入密码. 密码输入期间不会看到任何字符.然后直接回车即可.</p><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>至此, 博客创建完成. 登陆网站: huixueee.github.io 就可以看到啦!</p><h2 id="常用命令备注"><a href="#常用命令备注" class="headerlink" title="常用命令备注"></a>常用命令备注</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo g <span class="comment">#完整命令为hexo generate,用于生成静态文件</span></span><br><span class="line">hexo s <span class="comment">#完整命令为hexo server,用于启动服务器，主要用来本地预览</span></span><br><span class="line">hexo d <span class="comment">#完整命令为hexo deploy,用于将本地文件发布到github上</span></span><br><span class="line">hexo n <span class="comment">#完整命令为hexo new,用于新建一篇文章</span></span><br></pre></td></tr></table></figure><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p><a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="noopener">在主题仓库</a>中找到你喜欢的主题.</p><p>安装主题<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone &lt;repository&gt; themes/&lt;theme-name&gt;</span><br></pre></td></tr></table></figure></p><p>例如选择<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">NexT</a>主题<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next.git themes/NexT</span><br></pre></td></tr></table></figure></p><h2 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h2><p>修改你的博客根目录下的config.yml配置文件中的theme属性，将其设置为NexT.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: NexT</span><br></pre></td></tr></table></figure></p><h2 id="SSH的使用"><a href="#SSH的使用" class="headerlink" title="SSH的使用"></a>SSH的使用</h2><p>设置SSH使用Hexo deploy时免输入用户名与密码。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">bash: cd: /c/Users/usernamer/.ssh: No such file <span class="keyword">or</span> directory</span><br></pre></td></tr></table></figure></p><h3 id="生成SSH"><a href="#生成SSH" class="headerlink" title="生成SSH"></a>生成SSH</h3><p>使用<code>ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code>生成密钥，这时出现：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> which to save the key (/c/Users/ZhangRan/.ssh/id_rsa):</span><br></pre></td></tr></table></figure></p><p>直接两次回车，这样避免以后再deploy时输入<code>passphrase</code>,这时就能看到：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved <span class="keyword">in</span> ~/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> ~/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint <span class="keyword">is</span>:</span><br><span class="line"><span class="number">01</span>:<span class="number">0</span>f:f4:<span class="number">3</span>b:ca:<span class="number">85</span>:d6:<span class="number">17</span>:a1:<span class="number">7</span>d:f0:<span class="number">68</span>:<span class="number">9</span>d:f0:a2:db your_email@example.com</span><br></pre></td></tr></table></figure></p><h3 id="加入SSH-Agent"><a href="#加入SSH-Agent" class="headerlink" title="加入SSH Agent"></a>加入SSH Agent</h3><p>下一步输入：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-agent -s</span><br></pre></td></tr></table></figure></p><p>如果出现类似Agent pid XXXX这样的字样，则跳过下一步，否则输入：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval `ssh-agent -s`</span><br></pre></td></tr></table></figure></p><p>直到出现<code>Agent pid XXXX</code>这样的提示之后，输入：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure></p><p>这样，你成功的在本地生成了一个可用的SSH key。</p><h3 id="将SSH-Key添加到Github中"><a href="#将SSH-Key添加到Github中" class="headerlink" title="将SSH Key添加到Github中"></a>将SSH Key添加到Github中</h3><p>在Git中选择自己博客的repository中点击<strong>Settings –&gt; Deploy keys –&gt; Add deploy key</strong>，然后将生成的<code>id_rsa.pub</code>中的内容全选复制<strong>key</strong>输入框中，然后点击<strong>Add key</strong>完成添加公钥。<br>接下来测试配置是否成功<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><p>bash中会显示如下字样：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host <span class="string">'github.com (207.97.227.239)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)?</span></span><br></pre></td></tr></table></figure></p><p>输入yes后计算机会自动将github.com列入已知的host，然后会出现如下提示：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi huixueee/Huixueee.github.io! Yo<span class="string">u've successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure></p><p>如果成功看见，说明你已经配置好了。</p>]]></content>
      
      
      <categories>
          
          <category> Technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
